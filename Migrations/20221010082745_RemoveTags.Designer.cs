// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using okb3_archive.Data;

#nullable disable

namespace okb3_archive.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20221010082745_RemoveTags")]
    partial class RemoveTags
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("okb3_archive.Data.Models.ArchivedFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("DocumentTypeId")
                        .HasColumnType("char(36)");

                    b.Property<byte[]>("File")
                        .HasColumnType("longblob");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<string>("MD5Hash")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DocumentTypeId");

                    b.ToTable("ArchivedFiles");
                });

            modelBuilder.Entity("okb3_archive.Data.Models.DocumentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DocumentTypes");
                });

            modelBuilder.Entity("okb3_archive.Data.Models.ArchivedFile", b =>
                {
                    b.HasOne("okb3_archive.Data.Models.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentType");
                });
#pragma warning restore 612, 618
        }
    }
}
